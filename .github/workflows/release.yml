name: "CoffeeNet: Release Pipeline"

on:
  push:
    tags:
      - v*

jobs:
  publish:
    name: Publish artifacts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Verify if releasing from master
      run: |
        git fetch --no-tags --prune origin +refs/heads/master:refs/remotes/origin/master
        git merge-base --is-ancestor ${{ github.ref }} refs/remotes/origin/master
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Verify Gradle Wrapper version
      uses: gradle/wrapper-validation-action@v1
    - name: Recreate Gradle wrapper cache
      uses: actions/cache@v1
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/**/*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-
    - name: Build and verify with Gradle
      run: |
        ./gradlew check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish artifacts to Sonatype OSSRH
      run: |
        ./gradlew -Psonatype build publishToSonatype
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

  github:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Extract release notes
      run: |
        release_notes=$(awk -v r=1 '/^##[[:space:]]+/ { n++; next }; n==r; n==r+1 { exit }' CHANGELOG.md)
        if [ -z $(echo -n $release_notes | tr -d '[:space:]') ]; then
          echo "::error::Release notes are empty. Shouldn't happen"
        else
          release_notes="${release_notes//'%'/'%25'}"
          release_notes="${release_notes//$'\n'/'%0A'}"
          release_notes="${release_notes//$'\r'/'%0D'}"
          echo "::set-env name=RELEASE_NOTES::$release_notes"
        fi
    - name: Create GitHub Release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ env.RELEASE_NOTES }}
        draft: false
        prerelease: false
